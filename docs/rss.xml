<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>数据结构实验</title><link>https://boopliu.github.io/Data_structure_experiments</link><description>存放我的数据结构实验作业</description><copyright>数据结构实验</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://boopliu.github.io/Data_structure_experiments</link></image><lastBuildDate>Fri, 24 Oct 2025 04:50:06 +0000</lastBuildDate><managingEditor>数据结构实验</managingEditor><ttl>60</ttl><webMaster>数据结构实验</webMaster><item><title>实验2-循环队列</title><link>https://boopliu.github.io/Data_structure_experiments/post/shi-yan-2--xun-huan-dui-lie.html</link><description># 设计循环队列 (Design Circular Queue)

该代码实现了一个循环队列的数据结构，支持基本的队列操作，如入队、出队、获取队列头部和尾部元素、检查队列是否为空或已满。</description><guid isPermaLink="true">https://boopliu.github.io/Data_structure_experiments/post/shi-yan-2--xun-huan-dui-lie.html</guid><pubDate>Fri, 24 Oct 2025 04:45:21 +0000</pubDate></item><item><title>实验3-用顺序存储方式实现共享栈</title><link>https://boopliu.github.io/Data_structure_experiments/post/shi-yan-3--yong-shun-xu-cun-chu-fang-shi-shi-xian-gong-xiang-zhan.html</link><description># 共享栈（Shared Stack）实现

本文介绍了如何实现一个共享栈（Shared Stack）。</description><guid isPermaLink="true">https://boopliu.github.io/Data_structure_experiments/post/shi-yan-3--yong-shun-xu-cun-chu-fang-shi-shi-xian-gong-xiang-zhan.html</guid><pubDate>Fri, 24 Oct 2025 04:41:18 +0000</pubDate></item><item><title>实验1-多项式计算</title><link>https://boopliu.github.io/Data_structure_experiments/post/shi-yan-1--duo-xiang-shi-ji-suan.html</link><description># 多项式链表相加

该程序通过链表形式表示多项式，并实现了两个有序多项式链表的相加。</description><guid isPermaLink="true">https://boopliu.github.io/Data_structure_experiments/post/shi-yan-1--duo-xiang-shi-ji-suan.html</guid><pubDate>Fri, 24 Oct 2025 04:39:08 +0000</pubDate></item><item><title>实验5-稀疏矩阵的快速转置算法（利用辅助向量）</title><link>https://boopliu.github.io/Data_structure_experiments/post/shi-yan-5--xi-shu-ju-zhen-de-kuai-su-zhuan-zhi-suan-fa-%EF%BC%88-li-yong-fu-zhu-xiang-liang-%EF%BC%89.html</link><description># 稀疏矩阵转置

该程序实现了一个稀疏矩阵的快速转置操作，并使用三元组格式表示矩阵，节省了内存空间。</description><guid isPermaLink="true">https://boopliu.github.io/Data_structure_experiments/post/shi-yan-5--xi-shu-ju-zhen-de-kuai-su-zhuan-zhi-suan-fa-%EF%BC%88-li-yong-fu-zhu-xiang-liang-%EF%BC%89.html</guid><pubDate>Fri, 24 Oct 2025 01:43:31 +0000</pubDate></item><item><title>实验5-稀疏矩阵的基本转置算法（扫描第二列）</title><link>https://boopliu.github.io/Data_structure_experiments/post/shi-yan-5--xi-shu-ju-zhen-de-ji-ben-zhuan-zhi-suan-fa-%EF%BC%88-sao-miao-di-er-lie-%EF%BC%89.html</link><description># 稀疏矩阵转置

该程序实现了一个稀疏矩阵的转置操作，并使用三元组格式表示矩阵，节省了内存空间。</description><guid isPermaLink="true">https://boopliu.github.io/Data_structure_experiments/post/shi-yan-5--xi-shu-ju-zhen-de-ji-ben-zhuan-zhi-suan-fa-%EF%BC%88-sao-miao-di-er-lie-%EF%BC%89.html</guid><pubDate>Fri, 24 Oct 2025 01:41:09 +0000</pubDate></item><item><title>实验4-实现稀疏矩阵的存储（十字链表法）</title><link>https://boopliu.github.io/Data_structure_experiments/post/shi-yan-4--shi-xian-xi-shu-ju-zhen-de-cun-chu-%EF%BC%88-shi-zi-lian-biao-fa-%EF%BC%89.html</link><description># 十字链表表示稀疏矩阵

该程序实现了使用十字链表表示稀疏矩阵，并支持矩阵的初始化、插入非零元素、打印矩阵和释放内存。</description><guid isPermaLink="true">https://boopliu.github.io/Data_structure_experiments/post/shi-yan-4--shi-xian-xi-shu-ju-zhen-de-cun-chu-%EF%BC%88-shi-zi-lian-biao-fa-%EF%BC%89.html</guid><pubDate>Fri, 24 Oct 2025 01:25:40 +0000</pubDate></item></channel></rss>